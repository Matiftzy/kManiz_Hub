local kmhzos = {};

-- StarterGui.kManiz Hub ZoSamurai
kmhzos["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
kmhzos["1"]["Name"] = [[kManiz Hub ZoSamurai]];
kmhzos["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
kmhzos["1"]["ResetOnSpawn"] = false;


-- StarterGui.kManiz Hub ZoSamurai.Frame
kmhzos["2"] = Instance.new("Frame", kmhzos["1"]);
kmhzos["2"]["BorderSizePixel"] = 0;
kmhzos["2"]["BackgroundColor3"] = Color3.fromRGB(33, 33, 33);
kmhzos["2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
kmhzos["2"]["Size"] = UDim2.new(0, 400, 0, 200);
kmhzos["2"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
kmhzos["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.UICorner
kmhzos["3"] = Instance.new("UICorner", kmhzos["2"]);
kmhzos["3"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background
kmhzos["4"] = Instance.new("Frame", kmhzos["2"]);
kmhzos["4"]["BorderSizePixel"] = 0;
kmhzos["4"]["BackgroundColor3"] = Color3.fromRGB(25, 25, 25);
kmhzos["4"]["Size"] = UDim2.new(1, 0, 1, 0);
kmhzos["4"]["Position"] = UDim2.new(0, 0, 0.15, 0);
kmhzos["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["4"]["Name"] = [[Background]];


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.UICorner
kmhzos["5"] = Instance.new("UICorner", kmhzos["4"]);
kmhzos["5"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.Stroke
kmhzos["6"] = Instance.new("Frame", kmhzos["4"]);
kmhzos["6"]["BorderSizePixel"] = 0;
kmhzos["6"]["BackgroundColor3"] = Color3.fromRGB(46, 46, 46);
kmhzos["6"]["Size"] = UDim2.new(1, 0, 0.015, 0);
kmhzos["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["6"]["Name"] = [[Stroke]];


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.GameIcon
kmhzos["7"] = Instance.new("ImageLabel", kmhzos["4"]);
kmhzos["7"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
kmhzos["7"]["BorderSizePixel"] = 0;
kmhzos["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
kmhzos["7"]["Image"] = [[rbxassetid://101517207208632]];
kmhzos["7"]["Size"] = UDim2.new(0.6, 0, 0.6, 0);
kmhzos["7"]["Visible"] = false;
kmhzos["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["7"]["BackgroundTransparency"] = 1;
kmhzos["7"]["Name"] = [[GameIcon]];
kmhzos["7"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.GameIcon.UICorner
kmhzos["8"] = Instance.new("UICorner", kmhzos["7"]);



-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.GameIcon.GameName
kmhzos["9"] = Instance.new("TextLabel", kmhzos["7"]);
kmhzos["9"]["TextWrapped"] = true;
kmhzos["9"]["BorderSizePixel"] = 0;
kmhzos["9"]["TextScaled"] = true;
kmhzos["9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["9"]["TextSize"] = 14;
kmhzos["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
kmhzos["9"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["9"]["BackgroundTransparency"] = 1;
kmhzos["9"]["AnchorPoint"] = Vector2.new(0.5, 0);
kmhzos["9"]["Size"] = UDim2.new(3, 0, 0.25, 0);
kmhzos["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["9"]["Text"] = [[ZO SAMURAI]];
kmhzos["9"]["Name"] = [[GameName]];
kmhzos["9"]["Position"] = UDim2.new(0.5, 0, -0.3, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.GameIcon.UIStroke
kmhzos["a"] = Instance.new("UIStroke", kmhzos["7"]);
kmhzos["a"]["Thickness"] = 3;
kmhzos["a"]["Color"] = Color3.fromRGB(46, 46, 46);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.BladeSizeTextBox
kmhzos["b"] = Instance.new("TextBox", kmhzos["4"]);
kmhzos["b"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["b"]["BorderSizePixel"] = 0;
kmhzos["b"]["TextWrapped"] = true;
kmhzos["b"]["TextSize"] = 14;
kmhzos["b"]["Name"] = [[BladeSizeTextBox]];
kmhzos["b"]["TextScaled"] = true;
kmhzos["b"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
kmhzos["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
kmhzos["b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
kmhzos["b"]["PlaceholderText"] = [[1,1,1]];
kmhzos["b"]["Size"] = UDim2.new(0.95, 0, 0.15, 0);
kmhzos["b"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
kmhzos["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["b"]["Text"] = [[]];


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.BladeSizeTextBox.UITextSizeConstraint
kmhzos["c"] = Instance.new("UITextSizeConstraint", kmhzos["b"]);
kmhzos["c"]["MaxTextSize"] = 20;


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.BladeSizeTextBox.Title
kmhzos["d"] = Instance.new("TextLabel", kmhzos["b"]);
kmhzos["d"]["TextWrapped"] = true;
kmhzos["d"]["BorderSizePixel"] = 0;
kmhzos["d"]["TextScaled"] = true;
kmhzos["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["d"]["TextSize"] = 14;
kmhzos["d"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
kmhzos["d"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["d"]["BackgroundTransparency"] = 1;
kmhzos["d"]["Size"] = UDim2.new(1, 0, 1, 0);
kmhzos["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["d"]["Text"] = [[Blade Hitbox Expander]];
kmhzos["d"]["Name"] = [[Title]];
kmhzos["d"]["Position"] = UDim2.new(0, 0, -1.2, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.BladeSizeTextBox.UIStroke
kmhzos["e"] = Instance.new("UIStroke", kmhzos["b"]);
kmhzos["e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
kmhzos["e"]["Thickness"] = 2;
kmhzos["e"]["Color"] = Color3.fromRGB(46, 46, 46);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.BladeSizeTextBox.Info
kmhzos["f"] = Instance.new("TextLabel", kmhzos["b"]);
kmhzos["f"]["TextWrapped"] = true;
kmhzos["f"]["BorderSizePixel"] = 0;
kmhzos["f"]["TextScaled"] = true;
kmhzos["f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["f"]["TextSize"] = 14;
kmhzos["f"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Bold, Enum.FontStyle.Italic);
kmhzos["f"]["TextColor3"] = Color3.fromRGB(80, 80, 80);
kmhzos["f"]["BackgroundTransparency"] = 1;
kmhzos["f"]["Size"] = UDim2.new(1, 0, 0.6, 0);
kmhzos["f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["f"]["Text"] = [[(Enter the blade size first then reset to apply)]];
kmhzos["f"]["Name"] = [[Info]];
kmhzos["f"]["Position"] = UDim2.new(0, 0, 1.2, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Background.BladeSizeTextBox.Suggest
kmhzos["10"] = Instance.new("TextLabel", kmhzos["b"]);
kmhzos["10"]["TextWrapped"] = true;
kmhzos["10"]["BorderSizePixel"] = 0;
kmhzos["10"]["TextScaled"] = true;
kmhzos["10"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["10"]["TextSize"] = 14;
kmhzos["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Bold, Enum.FontStyle.Italic);
kmhzos["10"]["TextColor3"] = Color3.fromRGB(80, 80, 80);
kmhzos["10"]["BackgroundTransparency"] = 1;
kmhzos["10"]["Size"] = UDim2.new(1, 0, 0.6, 0);
kmhzos["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["10"]["Text"] = [[Recommended: 1,1,5 and 1,1,20]];
kmhzos["10"]["Name"] = [[Suggest]];
kmhzos["10"]["Position"] = UDim2.new(0, 0, 2.3, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top
kmhzos["11"] = Instance.new("Frame", kmhzos["2"]);
kmhzos["11"]["BorderSizePixel"] = 0;
kmhzos["11"]["BackgroundColor3"] = Color3.fromRGB(33, 33, 33);
kmhzos["11"]["Size"] = UDim2.new(1, 0, 0, 30);
kmhzos["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["11"]["Name"] = [[Top]];


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.UICorner
kmhzos["12"] = Instance.new("UICorner", kmhzos["11"]);
kmhzos["12"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Close
kmhzos["13"] = Instance.new("TextButton", kmhzos["11"]);
kmhzos["13"]["TextWrapped"] = true;
kmhzos["13"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
kmhzos["13"]["BorderSizePixel"] = 0;
kmhzos["13"]["TextSize"] = 14;
kmhzos["13"]["TextColor3"] = Color3.fromRGB(78, 0, 0);
kmhzos["13"]["TextScaled"] = true;
kmhzos["13"]["BackgroundColor3"] = Color3.fromRGB(255, 99, 90);
kmhzos["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
kmhzos["13"]["AnchorPoint"] = Vector2.new(0, 0.5);
kmhzos["13"]["Size"] = UDim2.new(0.65, 0, 0.65, 0);
kmhzos["13"]["Name"] = [[Close]];
kmhzos["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["13"]["Text"] = [[]];
kmhzos["13"]["Position"] = UDim2.new(0.735, 0, 0.5, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Close.UICorner
kmhzos["14"] = Instance.new("UICorner", kmhzos["13"]);
kmhzos["14"]["CornerRadius"] = UDim.new(1, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Close.UITextSizeConstraint
kmhzos["15"] = Instance.new("UITextSizeConstraint", kmhzos["13"]);
kmhzos["15"]["MaxTextSize"] = 20;


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Close.UIStroke
kmhzos["16"] = Instance.new("UIStroke", kmhzos["13"]);
kmhzos["16"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
kmhzos["16"]["Thickness"] = 1.5;
kmhzos["16"]["Color"] = Color3.fromRGB(224, 68, 62);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Minimize
kmhzos["17"] = Instance.new("TextButton", kmhzos["11"]);
kmhzos["17"]["TextWrapped"] = true;
kmhzos["17"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
kmhzos["17"]["BorderSizePixel"] = 0;
kmhzos["17"]["TextSize"] = 14;
kmhzos["17"]["TextColor3"] = Color3.fromRGB(154, 89, 2);
kmhzos["17"]["TextScaled"] = true;
kmhzos["17"]["BackgroundColor3"] = Color3.fromRGB(255, 191, 48);
kmhzos["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
kmhzos["17"]["AnchorPoint"] = Vector2.new(0, 0.5);
kmhzos["17"]["Size"] = UDim2.new(0.65, 0, 0.65, 0);
kmhzos["17"]["Name"] = [[Minimize]];
kmhzos["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["17"]["Text"] = [[]];
kmhzos["17"]["Position"] = UDim2.new(0.805, 0, 0.5, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Minimize.UICorner
kmhzos["18"] = Instance.new("UICorner", kmhzos["17"]);
kmhzos["18"]["CornerRadius"] = UDim.new(1, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Minimize.UIStroke
kmhzos["19"] = Instance.new("UIStroke", kmhzos["17"]);
kmhzos["19"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
kmhzos["19"]["Thickness"] = 1.5;
kmhzos["19"]["Color"] = Color3.fromRGB(223, 164, 54);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Minimize.UITextSizeConstraint
kmhzos["1a"] = Instance.new("UITextSizeConstraint", kmhzos["17"]);
kmhzos["1a"]["MaxTextSize"] = 50;


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Enlarge
kmhzos["1b"] = Instance.new("TextButton", kmhzos["11"]);
kmhzos["1b"]["TextWrapped"] = true;
kmhzos["1b"]["SizeConstraint"] = Enum.SizeConstraint.RelativeYY;
kmhzos["1b"]["BorderSizePixel"] = 0;
kmhzos["1b"]["TextSize"] = 14;
kmhzos["1b"]["TextColor3"] = Color3.fromRGB(2, 101, 0);
kmhzos["1b"]["TextScaled"] = true;
kmhzos["1b"]["BackgroundColor3"] = Color3.fromRGB(43, 210, 68);
kmhzos["1b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
kmhzos["1b"]["AnchorPoint"] = Vector2.new(0, 0.5);
kmhzos["1b"]["Size"] = UDim2.new(0.65, 0, 0.65, 0);
kmhzos["1b"]["Name"] = [[Enlarge]];
kmhzos["1b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["1b"]["Text"] = [[]];
kmhzos["1b"]["Position"] = UDim2.new(0.875, 0, 0.5, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Enlarge.UICorner
kmhzos["1c"] = Instance.new("UICorner", kmhzos["1b"]);
kmhzos["1c"]["CornerRadius"] = UDim.new(1, 0);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Enlarge.UITextSizeConstraint
kmhzos["1d"] = Instance.new("UITextSizeConstraint", kmhzos["1b"]);
kmhzos["1d"]["MinTextSize"] = 25;


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Enlarge.UIStroke
kmhzos["1e"] = Instance.new("UIStroke", kmhzos["1b"]);
kmhzos["1e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
kmhzos["1e"]["Thickness"] = 1.5;
kmhzos["1e"]["Color"] = Color3.fromRGB(26, 171, 43);


-- StarterGui.kManiz Hub ZoSamurai.Frame.Top.Title
kmhzos["1f"] = Instance.new("TextLabel", kmhzos["11"]);
kmhzos["1f"]["TextWrapped"] = true;
kmhzos["1f"]["BorderSizePixel"] = 0;
kmhzos["1f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
kmhzos["1f"]["TextScaled"] = true;
kmhzos["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["1f"]["TextSize"] = 14;
kmhzos["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/RobotoMono.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
kmhzos["1f"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
kmhzos["1f"]["BackgroundTransparency"] = 1;
kmhzos["1f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
kmhzos["1f"]["Size"] = UDim2.new(0.975, 0, 0.8, 0);
kmhzos["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
kmhzos["1f"]["Text"] = [[kManiz Hub \ Zo]];
kmhzos["1f"]["Name"] = [[Title]];
kmhzos["1f"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);

-- StarterGui.kManiz Hub ZoSamurai.Frame.Drag Logic
local UIS = game:GetService("UserInputService")
local gui = kmhzos["2"] -- The frame to make draggable

local dragging
local dragInput
local dragStart
local startPos
local minimized = false
local enlarged = false
local minimizeCd = false
local enlargeCd = false

local function update(input)
	local delta = input.Position - dragStart
	gui.Position = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
end

gui.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = gui.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

gui.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UIS.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

-- Function to monitor character and update blade size
local function monitorCharacter()
	local player = game.Players.LocalPlayer

	-- Wait for character to spawn
	player.CharacterAdded:Connect(function(character)
		task.spawn(function()
			while true do
				-- Wait for Blazeiid and its children
				local blaze = workspace:WaitForChild("Blazeiid")
				local handle = blaze:WaitForChild("Handle")
				local blade = handle:WaitForChild("Blade")

				-- Get size input from TextBox
				local input = kmhzos["b"].Text
				local sizeValues = string.split(input, ",")

				-- Validate and set the blade size
				if #sizeValues == 3 then
					local success, x, y, z = pcall(function()
						return tonumber(sizeValues[1]), tonumber(sizeValues[2]), tonumber(sizeValues[3])
					end)
					if success and x and y and z then
						blade.Size = Vector3.new(x, y, z)
					end
				end

				task.wait(0.1) -- Avoid rapid execution
			end
		end)
	end)
end

kmhzos["17"].MouseButton1Click:Connect(function()
	if minimized then
		if not minimizeCd and not enlargeCd then
			minimizeCd = true
			enlargeCd = true
			local tweenMinimize = nil
			if enlarged then
				tweenMinimize = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 500, 0, 300)})
			else
				tweenMinimize = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 400, 0, 200)})
			end
			if tweenMinimize then
				tweenMinimize:Play()
			end
			kmhzos["4"].Visible = true

			tweenMinimize.Completed:Connect(function()
				minimizeCd = false
				minimized = false
				enlargeCd = false
			end)
		end
	else
		if not minimizeCd and not enlargeCd then
			minimizeCd = true
			enlargeCd = true
			local tweenMinimize = nil
			if enlarged then
				tweenMinimize = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 500, 0, 0)})
			else
				tweenMinimize = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 400, 0, 0)})
			end
			if tweenMinimize then
				tweenMinimize:Play()
			end

			tweenMinimize.Completed:Connect(function()
				kmhzos["4"].Visible = false
				minimized = true
				minimizeCd = false
				enlargeCd = false
			end)
		end
	end
end)

kmhzos["1b"].MouseButton1Click:Connect(function()
	if enlarged then
		if not minimizeCd and not enlargeCd then
			minimizeCd = true
			enlargeCd = true
			local tweenEnlarge = nil
			if minimized then
				tweenEnlarge = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 400, 0, 0)})
			else
				tweenEnlarge = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 400, 0, 200)})
			end
			if tweenEnlarge then
				tweenEnlarge:Play()
			end

			tweenEnlarge.Completed:Connect(function()
				enlarged = false
				minimizeCd = false
				enlargeCd = false
			end)
		end
	else
		if not minimizeCd and not enlargeCd then
			minimizeCd = true
			enlargeCd = true
			local tweenEnlarge = nil
			if minimized then
				tweenEnlarge = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 500, 0, 0)})
			else
				tweenEnlarge = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 500, 0, 300)})
			end
			if tweenEnlarge then
				tweenEnlarge:Play()
			end

			tweenEnlarge.Completed:Connect(function()
				enlarged = true
				minimizeCd = false
				enlargeCd = false
			end)
		end
	end
end)

kmhzos["13"].MouseButton1Click:Connect(function()
	local tweenFrame = game:GetService("TweenService"):Create(kmhzos["2"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 400, 0, 0)})
	local tweenTop = game:GetService("TweenService"):Create(kmhzos["11"], TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(1, 0, 0, 0)})

	tweenTop:Play()
	tweenFrame:Play()
	
	tweenTop.Completed:Connect(function()
		kmhzos["1"]:Destroy()
	end)
end)

-- Run the monitorCharacter function
monitorCharacter()

return kmhzos["1"], require;
